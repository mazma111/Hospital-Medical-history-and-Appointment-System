import tkinter as tk
from tkinter import messagebox
from PIL import ImageTk, Image

# Medical Management System Class (Registration and Sign In Pages)
class MedicalManagementSystem:
    def __init__(self, root):
        self.root = root
        self.root.title("Medical Management System")
        self.root.geometry("800x500")
        self.root.configure(bg="white")
        self.current_frame = None
        self.previous_page = None

        # Create gradient background
        self.create_gradient_background()

        # Show the Home Page first (this will be the first screen)
        self.show_home_page()

    def create_gradient_background(self):
        """Creates a gradient background on the canvas."""
        canvas = tk.Canvas(self.root, width=800, height=500)
        canvas.place(x=0, y=0)
        color1 = "#007BFF"
        color2 = "#00BFFF"
        steps = 100
        for i in range(steps):
            ratio = i / steps
            r1, g1, b1 = self.root.winfo_rgb(color1)
            r2, g2, b2 = self.root.winfo_rgb(color2)
            r = int(r1 + (r2 - r1) * ratio) // 256
            g = int(g1 + (g2 - g1) * ratio) // 256
            b = int(b1 + (b2 - b1) * ratio) // 256
            color = f"#{r:02x}{g:02x}{b:02x}"
            canvas.create_rectangle(0, i * 5, 800, (i + 1) * 5, outline="", fill=color)

    def clear_frame(self):
        """Destroy any current frame to replace with a new one."""
        if self.current_frame:
            self.current_frame.destroy()

    def add_back_button(self, previous_page_func):
        """Add a Back button to navigate to the previous page."""
        back_btn = tk.Button(self.root, text="Back", font=("Helvetica", 12, "bold"), bg="#4682B4", fg="white", relief="flat", cursor="hand2",
                             command=previous_page_func)
        back_btn.place(relx=0.05, rely=0.05)  # Position it at the top left

    def show_home_page(self):
        self.clear_frame()

        # Add Back Button to Home Page (if necessary)
        self.previous_page = self.show_home_page

        # Home Page Frame
        self.current_frame = tk.Frame(self.root, bg="white", bd=2, relief="ridge")
        self.current_frame.place(relx=0.5, rely=0.5, anchor="center", width=500, height=350)

        # Title and Welcome Message
        title = tk.Label(self.current_frame, text="Welcome to Hospital", font=("Helvetica", 18, "bold"), bg="white", fg="#4682B4")
        title.pack(pady=20)

        # Buttons for Sign In and Register
        register_btn = tk.Button(self.current_frame, text="Register", font=("Arial", 12), command=self.show_register_page)
        register_btn.pack(pady=10)

        signin_btn = tk.Button(self.current_frame, text="Sign In", font=("Arial", 12), command=self.show_signin_page)
        signin_btn.pack(pady=10)

    # Register Page for Users Only
    def show_register_page(self):
        self.clear_frame()

        # Add Back Button to Register Page
        self.add_back_button(self.show_home_page)

        # Register Page Frame
        self.current_frame = tk.Frame(self.root, bg="white", bd=2, relief="ridge")
        self.current_frame.place(relx=0.5, rely=0.5, anchor="center", width=500, height=450)

        # Title
        title = tk.Label(self.current_frame, text="Create Account", font=("Helvetica", 18, "bold"), bg="white", fg="#4682B4")
        title.pack(pady=10)

        # Input Fields
        fields = ["First Name", "Last Name", "Email", "Password", "Confirm Password"]
        self.entries = {}

        for index, field in enumerate(fields):
            lbl = tk.Label(self.current_frame, text=f"{field}:", font=("Helvetica", 12), bg="white")
            lbl.pack(anchor="w", padx=20, pady=2)
            entry = tk.Entry(self.current_frame, font=("Arial", 12), bg="#F0F8FF", relief="groove",
                             show="*" if "Password" in field else "")
            entry.pack(fill="x", padx=20, pady=5)
            entry.config(highlightbackground="#87CEFA", highlightthickness=1, bd=0)
            self.entries[field] = entry

            # Bind Enter key to move to the next field
            entry.bind("<Return>", lambda event, idx=index: self.focus_next_field(idx))

        # Register Button
        register_btn = tk.Button(self.current_frame, text="Register", font=("Helvetica", 14, "bold"), bg="#4682B4", fg="white",
                                 activebackground="#5A9BD3", relief="flat", cursor="hand2", command=self.register_user)
        register_btn.pack(pady=15)

        # Sign In Link
        signin_btn = tk.Button(self.current_frame, text="Already have an account? Sign In", font=("Helvetica", 10, "underline"),
                               bg="white", fg="#4682B4", cursor="hand2", relief="flat", command=self.show_signin_page)
        signin_btn.pack()

    def focus_next_field(self, index):
        """Focus on the next entry field based on the current index."""
        if index + 1 < len(self.entries):  # Check if there is a next field
            next_field = list(self.entries.values())[index + 1]
            next_field.focus_set()

    def register_user(self):
        """Register user details."""
        first_name = self.entries["First Name"].get()
        last_name = self.entries["Last Name"].get()
        email = self.entries["Email"].get()
        password = self.entries["Password"].get()
        confirm_password = self.entries["Confirm Password"].get()

        if not all([first_name, last_name, email, password, confirm_password]):
            messagebox.showerror("Error", "All fields are required!")
        elif password != confirm_password:
            messagebox.showerror("Error", "Passwords do not match!")
        else:
            messagebox.showinfo("Success", "Registration Successful!")
            self.show_signin_page()

    # Sign-In Page for All Roles
    def show_signin_page(self):
        self.clear_frame()

        # Add Back Button to Sign In Page
        self.add_back_button(self.show_home_page)

        # Sign In Page Frame
        self.current_frame = tk.Frame(self.root, bg="white", bd=2, relief="ridge")
        self.current_frame.place(relx=0.5, rely=0.5, anchor="center", width=500, height=450)

        # Title
        title = tk.Label(self.current_frame, text="Sign In", font=("Helvetica", 18, "bold"), bg="white", fg="#4682B4")
        title.pack(pady=10)

        # Role Selector
        lbl_role = tk.Label(self.current_frame, text="Select Role:", font=("Helvetica", 12), bg="white")
        lbl_role.pack(anchor="w", padx=20, pady=5)

        self.role_var = tk.StringVar(value="User")
        role_frame = tk.Frame(self.current_frame, bg="white")
        role_frame.pack(pady=5)

        roles = ["User", "Doctor", "Admin"]
        for role in roles:
            btn = tk.Button(role_frame, text=role, font=("Helvetica", 12, "bold"), width=10,
                            bg="#E0F7FF", fg="black", relief="flat", bd=0,
                            activebackground="#ADD8E6", cursor="hand2", command=lambda r=role: self.role_var.set(r))
            btn.pack(side="left", padx=5)

        # Email and Password Fields
        lbl_email = tk.Label(self.current_frame, text="Email:", font=("Helvetica", 12), bg="white")
        lbl_email.pack(anchor="w", padx=20, pady=2)
        self.email_entry = tk.Entry(self.current_frame, font=("Arial", 12), bg="#F0F8FF")
        self.email_entry.pack(fill="x", padx=20, pady=5)
        self.email_entry.bind("<Return>", lambda event: self.password_entry.focus_set())  # Focus on password entry

        lbl_password = tk.Label(self.current_frame, text="Password:", font=("Helvetica", 12), bg="white")
        lbl_password.pack(anchor="w", padx=20, pady=2)
        self.password_entry = tk.Entry(self.current_frame, font=("Arial", 12), bg="#F0F8FF", show="*")
        self.password_entry.pack(fill="x", padx=20, pady=5)

        # Sign-In Button
        signin_btn = tk.Button(self.current_frame, text="Sign In", font=("Helvetica", 14, "bold"), bg="#4682B4", fg="white",
                               relief="flat", activebackground="#5A9BD3", cursor="hand2", command=self.signin_user)
        signin_btn.pack(pady=20)

        # Register Link
        register_btn = tk.Button(self.current_frame, text="Don't have an account? Register", font=("Helvetica", 10, "underline"),
                                 bg="white", fg="#4682B4", cursor="hand2", relief="flat", command=self.show_register_page)
        register_btn.pack()

    def signin_user(self):
        """Sign-In action handler."""
        role = self.role_var.get()
        email = self.email_entry.get()
        password = self.password_entry.get()

        if not email or not password:
            messagebox.showerror("Error", "Please enter email and password.")
        else:
            # After successful sign-in, go to the user page if the role is User
            if role == "User":
                messagebox.showinfo("Success", "Welcome User!")
                self.create_user_gui()
            elif role == "Doctor":
                messagebox.showinfo("Success", "Welcome Doctor!")
                self.create_doctor_gui()
            elif role == "Admin":
                messagebox.showinfo("Success", "Welcome Admin!")
                self.create_admin_gui()

    def create_user_gui(self):
        """Creates and displays the user profile page GUI."""
        # Initialize the user page window
        user_root = tk.Tk()
        user_root.title("User Profile - Medical Management System")
        user_root.geometry("800x600")
        user_root.configure(bg="#f0f8ff")  # Light blue background

        # Create a frame for the top navigation bar
        top_frame = tk.Frame(user_root, bg="#4682b4", height=50)
        top_frame.pack(fill=tk.X)

        # Add a logo placeholder
        logo_placeholder = tk.Label(top_frame, text="LOGO", bg="#4682b4", fg="white", font=("Arial", 16))
        logo_placeholder.pack(side=tk.LEFT, padx=20, pady=10)

        # Frames
        left_frame = tk.Frame(user_root)
        left_frame.pack(side="left", fill="both", expand=True)
        right_frame = tk.Frame(user_root)
        right_frame.pack(side="right", fill="both", expand=True)

        # Add navigation buttons
        nav_buttons = ["Home", "Clinics", "Patients"]
        for button in nav_buttons:
            btn = tk.Button(top_frame, text=button, bg="#87cefa", fg="black", font=("Arial", 12), relief="flat")
            btn.pack(side=tk.LEFT, padx=10)

        # Add a notification button (bell icon)
        notification_btn = tk.Button(top_frame, text="\ud83d\udd14", bg="#4682b4", fg="white", font=("Arial", 16),
                                     relief="flat")
        notification_btn.pack(side=tk.RIGHT, padx=10)

        # Add a welcome message
        welcome_label = tk.Label(left_frame, text="Welcome to Your Profile", fg="#4682b4", font=("Arial", 20, "bold"))
        welcome_label.place(x=100, y=250)

        # Run the main event loop for the user window
        user_root.mainloop()

    def create_doctor_gui(self):
        """Creates and displays the doctor page GUI."""
        # Initialize the doctor page window
        doctor_root = tk.Tk()
        doctor_root.title("Doctor Page - Medical Management System")
        doctor_root.geometry("800x600")
        doctor_root.configure(bg="#f0f8ff")  # Light blue background

        # Create a frame for the top navigation bar
        top_frame = tk.Frame(doctor_root, bg="#4682b4", height=50)
        top_frame.pack(fill=tk.X)

        # Add a logo placeholder
        logo_placeholder = tk.Label(top_frame, text="LOGO", bg="#4682b4", fg="white", font=("Arial", 16))
        logo_placeholder.pack(side=tk.LEFT, padx=20, pady=10)

        # Frames
        left_frame = tk.Frame(doctor_root)
        left_frame.pack(side="left", fill="both", expand=True)
        right_frame = tk.Frame(doctor_root)
        right_frame.pack(side="right", fill="both", expand=True)

        # Add navigation buttons
        nav_buttons = ["Home", "Clinics", "Patients"]
        for button in nav_buttons:
            btn = tk.Button(top_frame, text=button, bg="#87cefa", fg="black", font=("Arial", 12), relief="flat")
            btn.pack(side=tk.LEFT, padx=10)

        # Add a notification button (bell icon)
        notification_btn = tk.Button(top_frame, text="\ud83d\udd14", bg="#4682b4", fg="white", font=("Arial", 16),
                                     relief="flat")
        notification_btn.pack(side=tk.RIGHT, padx=10)

        # Add a welcome message
        welcome_label = tk.Label(left_frame, text="Welcome, Doctor!", fg="#4682b4", font=("Arial", 20, "bold"))
        welcome_label.place(x=100, y=250)

        # Run the main event loop for doctor window
        doctor_root.mainloop()

    def create_admin_gui(self):
        """Creates and displays the admin page GUI."""
        # Initialize the admin page window
        admin_root = tk.Tk()
        admin_root.title("Admin Page - Medical Management System")
        admin_root.geometry("800x600")
        admin_root.configure(bg="#f0f8ff")  # Light blue background

        # Create a frame for the top navigation bar
        top_frame = tk.Frame(admin_root, bg="#4682b4", height=50)
        top_frame.pack(fill=tk.X)

        # Add a logo placeholder
        logo_placeholder = tk.Label(top_frame, text="LOGO", bg="#4682b4", fg="white", font=("Arial", 16))
        logo_placeholder.pack(side=tk.LEFT, padx=20, pady=10)

        # Frames
        left_frame = tk.Frame(admin_root)
        left_frame.pack(side="left", fill="both", expand=True)
        right_frame = tk.Frame(admin_root)
        right_frame.pack(side="right", fill="both", expand=True)

        # Add navigation buttons
        nav_buttons = ["Home", "Manage Users", "Settings"]
        for button in nav_buttons:
            btn = tk.Button(top_frame, text=button, bg="#87cefa", fg="black", font=("Arial", 12), relief="flat")
            btn.pack(side=tk.LEFT, padx=10)

        # Add a notification button (bell icon)
        notification_btn = tk.Button(top_frame, text="\ud83d\udd14", bg="#4682b4", fg="white", font=("Arial", 16),
                                     relief="flat")
        notification_btn.pack(side=tk.RIGHT, padx=10)

        # Add a welcome message
        welcome_label = tk.Label(left_frame, text="Welcome, Admin!", fg="#4682b4", font=("Arial", 20, "bold"))
        welcome_label.place(x=100, y=250)

        # Run the main event loop for admin window
        admin_root.mainloop()

# Main function to start the system
def run():
    root = tk.Tk()
    app = MedicalManagementSystem(root)
    root.mainloop()

run()

