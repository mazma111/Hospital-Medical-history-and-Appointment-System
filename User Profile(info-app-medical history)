import tkinter as tk
from tkinter import Canvas
from PIL import Image, ImageTk, ImageDraw
from classes import *
from database import *

create_tables()
def show_info_page(password_from_login):
    data = Patient.display_patient_info(password_from_login)   # password_from_login = "ahmed1234"  # This will be the password entered by the user during login
    clear_right_side()
    tk.Label(canvas, text="User Information", font=("Arial", 16), bg="#CCE5FF").place(x=300, y=60)
    tk.Label(canvas, text="First Name: "+ data[1] , font=("Arial", 12), bg="#CCE5FF").place(x=300, y=100)
    tk.Label(canvas, text="Last Name: "+ data[2], font=("Arial", 12), bg="#CCE5FF").place(x=300, y=140)
    tk.Label(canvas, text="Email: "+ data[3], font=("Arial", 12), bg="#CCE5FF").place(x=300, y=180)
    tk.Label(canvas, text="Password: "+ data[4], font=("Arial", 12), bg="#CCE5FF").place(x=300, y=220)
    tk.Label(canvas, text="Number: "+ data[5], font=("Arial", 12), bg="#CCE5FF").place(x=300, y=260)
    tk.Label(canvas, text=f"Date of birth: {data[6]}", font=("Arial", 12), bg="#CCE5FF").place(x=300, y=300)
    tk.Label(canvas, text="Gender: "+ data[7], font=("Arial", 12), bg="#CCE5FF").place(x=300, y=340)
    tk.Label(canvas, text="Height: "+ str(data[8]), font=("Arial", 12), bg="#CCE5FF").place(x=300, y=380)
    tk.Label(canvas, text="Weight: "+ str(data[9]), font=("Arial", 12), bg="#CCE5FF").place(x=300, y=420)


def show_appointments_page():
    clear_right_side()
    tk.Label(canvas, text="Appointments", font=("Arial", 16), bg="#CCE5FF").place(x=300, y=60)

    appointments = [
        {"name": "Dr. Reem", "specialty": "Cardiologist", "time": "1:00 PM", "price": "100 EGP"},
        {"name": "Dr. Sarah", "specialty": "Dentist", "time": "3:00 PM", "price": "200 EGP"},
    ]

    y_position = 100
    for appointment in appointments:
        frame = tk.Frame(canvas, bg="white", bd=2, relief="solid")
        frame.place(x=300, y=y_position, width=400, height=150)
         # Appointment details
        tk.Label(frame, text=appointment["name"], font=("Arial", 12), bg="white").pack(pady=5)
        tk.Label(frame, text=appointment["specialty"], font=("Arial", 10), bg="white").pack()
        tk.Label(frame, text=f"Time: {appointment['time']}", font=("Arial", 10), bg="white").pack()
        tk.Label(frame, text=f"Price: {appointment['price']}", font=("Arial", 10), bg="white").pack()

        # Add Edit and Delete buttons
        tk.Button(frame, text="Edit", font=("Arial", 10), bg="#CCE5FF", relief="flat", bd=0).pack(side="left", padx=10,
                                                                                                  pady=10)
        tk.Button(frame, text="Delete", font=("Arial", 10), bg="#FFCCCC", relief="flat", bd=0).pack(side="right",
                                                                                                    padx=10, pady=10)

        y_position += 160

def clear_right_side():
    """Clear all widgets on the right side of the canvas."""
    for widget in canvas.winfo_children():
        if widget.winfo_x() >= 300:
            widget.destroy()

def show_medical_history_page():
    """Display the Medical History page content on the right side."""
    clear_right_side()  # Clear the right side of the canvas

    # Medical Info Section
    tk.Label(canvas, text="Medical Info:", font=("Arial", 14, "bold"), bg="#CCE5FF").place(x=300, y=60)
    tk.Label(canvas, text="Gender:", font=("Arial", 12), bg="#CCE5FF").place(x=300, y=100)
    tk.Label(canvas, text="Age:", font=("Arial", 12), bg="#CCE5FF").place(x=300, y=140)

    # Display values for Medical Info
    tk.Label(canvas, text="Male", font=("Arial", 12), bg="white", relief="solid", width=20).place(x=370, y=100)
    tk.Label(canvas, text="47", font=("Arial", 12), bg="white", relief="solid", width=20).place(x=370, y=140)

    # History Section
    tk.Label(canvas, text="History:", font=("Arial", 14, "bold"), bg="#CCE5FF").place(x=300, y=200)
    tk.Label(canvas, text="Diagnosis:", font=("Arial", 12), bg="#CCE5FF").place(x=300, y=240)
    tk.Label(canvas, text="Date:", font=("Arial", 12), bg="#CCE5FF").place(x=300, y=280)
    tk.Label(canvas, text="Operations:", font=("Arial", 12), bg="#CCE5FF").place(x=300, y=320)
    tk.Label(canvas, text="Medicine:", font=("Arial", 12), bg="#CCE5FF").place(x=300, y=360)
    tk.Label(canvas, text="Cured?", font=("Arial", 12), bg="#CCE5FF").place(x=300, y=400)
    tk.Label(canvas, text="If yes, date:", font=("Arial", 12), bg="#CCE5FF").place(x=550, y=400)

    # Display values for History
    tk.Label(canvas, text="Cancer", font=("Arial", 12), bg="white", relief="solid", width=20).place(x=410, y=240)
    tk.Label(canvas, text="21-02-2021", font=("Arial", 12), bg="white", relief="solid", width=20).place(x=410, y=280)
    tk.Label(canvas, text="No", font=("Arial", 12), bg="white", relief="solid", width=20).place(x=410, y=320)
    tk.Label(canvas, text="Chemotherapy", font=("Arial", 12), bg="white", relief="solid", width=20).place(x=410, y=360)
    tk.Label(canvas, text="Yes", font=("Arial", 12), bg="white", relief="solid", width=10).place(x=410, y=400)
    tk.Label(canvas, text="23-05-2023", font=("Arial", 12), bg="white", relief="solid", width=15).place(x=650, y=400)

def create_gradient(canvas, color1, color2):
    """Create a gradient background."""
    steps = 100
    for i in range(steps):
        ratio = i / steps
        r1, g1, b1 = root.winfo_rgb(color1)
        r2, g2, b2 = root.winfo_rgb(color2)
        r = int(r1 + (r2 - r1) * ratio) // 256
        g = int(g1 + (g2 - g1) * ratio) // 256
        b = int(b1 + (b2 - b1) * ratio) // 256
        color = f"#{r:02x}{g:02x}{b:02x}"
        canvas.create_rectangle(0, i * 6, 800, (i + 1) * 6, outline="", fill=color)

root = tk.Tk()
root.title("Hospital Management System")
root.geometry("800x600")
root.resizable(False, False)

# Create the canvas
canvas = Canvas(root, width=800, height=600)
canvas.pack(fill="both", expand=True)
create_gradient(canvas, "#007BFF", "#00BFFF")

# Left-side Profile Section
# image_path = r"C:\Users\afifi\OneDrive\Desktop\Year 2 projects\SWE-Hospital\ec58198c3f652de85e735d918ef85dd8.jpg"
# image = Image.open(image_path)
# image = image.resize((100, 100))

# # Create circular mask
# mask = Image.new('L', (100, 100), 0)
# draw = ImageDraw.Draw(mask)
# draw.ellipse((0, 0, 100, 100), fill=255)
# image.putalpha(mask)

# profile_pic = ImageTk.PhotoImage(image)
# profile_pic_label = tk.Label(canvas, image=profile_pic, bg="#CCE5FF")
# profile_pic_label.place(x=30, y=60)

buttons = [
    ("Info", show_info_page),
    ("Appointments", show_appointments_page),
    ("Medical History", show_medical_history_page),
    ("Log Out", lambda: print("Log Out clicked!"))
]

y_position = 180
for text, command in buttons:
    tk.Button(canvas, text=text, font=("Arial", 12), bg="#CCE5FF", relief="flat", bd=4, width=15,
              command=command).place(x=30, y=y_position)
    y_position += 50

show_info_page()

root.mainloop()
